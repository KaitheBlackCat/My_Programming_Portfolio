
#include "U8glib.h"
#include "RTClib.h"

#define CLOCK_INTERRUPT_PIN 2

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_DEV_0|U8G_I2C_OPT_NO_ACK|U8G_I2C_OPT_FAST);
RTC_DS3231 rtc;

char daysOfTheWeek[7][12] = {"SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"};

volatile bool timeRefresh = false;

const u8g_fntpgm_uint8_t M42_6[229] U8G_FONT_SECTION("M42_6") = {
  0,16,12,0,252,8,0,0,0,0,48,57,0,8,0,8,
  0,10,8,16,11,0,0,127,128,255,192,225,192,225,192,225,
  192,225,192,255,192,127,128,5,8,8,6,0,0,56,120,248,
  248,56,56,56,56,10,8,16,11,0,0,255,128,255,192,1,
  192,127,192,255,128,224,0,255,192,255,192,10,8,16,11,0,
  0,127,128,255,192,225,192,15,128,15,192,225,192,255,192,127,
  128,10,8,16,11,0,0,15,128,31,128,63,128,123,128,243,
  128,255,192,255,192,3,128,10,8,16,11,0,0,255,192,255,
  192,224,0,255,128,255,192,1,192,255,192,255,128,10,8,16,
  11,0,0,127,192,255,192,224,0,255,128,255,192,225,192,255,
  192,127,128,10,8,16,11,0,0,255,192,255,192,3,192,7,
  128,15,0,30,0,60,0,56,0,10,8,16,11,0,0,127,
  128,255,192,225,192,127,128,255,192,225,192,255,192,127,128,10,
  8,16,11,0,0,127,128,255,192,225,192,255,192,127,192,1,
  192,255,192,255,128};

const u8g_fntpgm_uint8_t M42_12[559] U8G_FONT_SECTION("M42_12") = {
  0,32,24,0,248,16,0,0,0,0,48,58,0,16,0,16,
  0,20,16,48,22,0,0,63,255,192,63,255,192,255,255,240,
  255,255,240,252,3,240,252,3,240,252,3,240,252,3,240,252,
  3,240,252,3,240,252,3,240,252,3,240,255,255,240,255,255,
  240,63,255,192,63,255,192,10,16,32,12,0,0,15,192,15,
  192,63,192,63,192,255,192,255,192,255,192,255,192,15,192,15,
  192,15,192,15,192,15,192,15,192,15,192,15,192,20,16,48,
  22,0,0,255,255,192,255,255,192,255,255,240,255,255,240,0,
  3,240,0,3,240,63,255,240,63,255,240,255,255,192,255,255,
  192,252,0,0,252,0,0,255,255,240,255,255,240,255,255,240,
  255,255,240,20,16,48,22,0,0,63,255,192,63,255,192,255,
  255,240,255,255,240,252,3,240,252,3,240,0,255,192,0,255,
  192,0,255,240,0,255,240,252,3,240,252,3,240,255,255,240,
  255,255,240,63,255,192,63,255,192,20,16,48,22,0,0,0,
  255,192,0,255,192,3,255,192,3,255,192,15,255,192,15,255,
  192,63,207,192,63,207,192,255,15,192,255,15,192,255,255,240,
  255,255,240,255,255,240,255,255,240,0,15,192,0,15,192,20,
  16,48,22,0,0,255,255,240,255,255,240,255,255,240,255,255,
  240,252,0,0,252,0,0,255,255,192,255,255,192,255,255,240,
  255,255,240,0,3,240,0,3,240,255,255,240,255,255,240,255,
  255,192,255,255,192,20,16,48,22,0,0,63,255,240,63,255,
  240,255,255,240,255,255,240,252,0,0,252,0,0,255,255,192,
  255,255,192,255,255,240,255,255,240,252,3,240,252,3,240,255,
  255,240,255,255,240,63,255,192,63,255,192,20,16,48,22,0,
  0,255,255,240,255,255,240,255,255,240,255,255,240,0,15,240,
  0,15,240,0,63,192,0,63,192,0,255,0,0,255,0,3,
  252,0,3,252,0,15,240,0,15,240,0,15,192,0,15,192,
  0,20,16,48,22,0,0,63,255,192,63,255,192,255,255,240,
  255,255,240,252,3,240,252,3,240,63,255,192,63,255,192,255,
  255,240,255,255,240,252,3,240,252,3,240,255,255,240,255,255,
  240,63,255,192,63,255,192,20,16,48,22,0,0,63,255,192,
  63,255,192,255,255,240,255,255,240,252,3,240,252,3,240,255,
  255,240,255,255,240,63,255,240,63,255,240,0,3,240,0,3,
  240,255,255,240,255,255,240,255,255,192,255,255,192,4,12,12,
  6,0,2,240,240,240,240,0,0,0,0,240,240,240,240};

const u8g_fntpgm_uint8_t Superstar12[695] U8G_FONT_SECTION("Superstar12") = {
  0,21,21,254,251,9,1,49,0,0,46,90,0,11,255,9,
  0,2,2,2,3,0,0,192,192,9,9,18,10,0,0,1,
  128,3,128,7,0,14,0,28,0,56,0,112,0,224,0,192,
  0,7,9,9,8,0,0,124,254,206,222,254,246,230,254,124,
  3,9,9,4,0,0,96,224,224,96,96,96,96,96,96,7,
  9,9,8,0,0,124,254,198,30,124,240,192,254,254,7,9,
  9,8,0,0,124,254,198,30,28,6,198,254,124,7,9,9,
  8,0,0,12,28,60,124,236,204,254,254,12,7,9,9,8,
  0,0,254,254,192,252,254,6,198,254,124,7,9,9,8,0,
  0,124,252,192,252,254,198,198,254,124,7,9,9,8,0,0,
  254,254,6,14,28,24,56,48,48,7,9,9,8,0,0,124,
  254,198,254,124,198,198,254,124,7,9,9,8,0,0,124,254,
  198,198,254,126,6,126,124,2,5,5,3,0,2,192,192,0,
  192,192,3,7,7,4,0,0,96,96,0,96,96,224,192,4,
  7,7,5,0,1,48,112,224,192,224,112,48,6,5,5,7,
  0,2,252,252,0,252,252,4,7,7,5,0,1,192,224,112,
  48,112,224,192,7,9,9,8,0,0,124,254,198,30,60,48,
  0,48,48,11,12,24,12,0,255,63,128,127,192,224,224,206,
  96,223,96,219,96,223,96,223,96,219,224,225,192,124,0,60,
  0,7,9,9,8,0,0,56,124,238,198,254,254,198,198,198,
  7,9,9,8,0,0,252,254,198,254,252,198,198,254,252,7,
  9,9,8,0,0,124,254,198,192,192,192,198,254,124,7,9,
  9,8,0,0,252,254,198,198,198,198,198,254,252,7,9,9,
  8,0,0,254,254,192,252,252,192,192,254,254,7,9,9,8,
  0,0,254,254,192,192,252,252,192,192,192,7,9,9,8,0,
  0,124,254,198,192,222,222,198,254,124,7,9,9,8,0,0,
  198,198,198,254,254,198,198,198,198,6,9,9,7,0,0,252,
  252,48,48,48,48,48,252,252,7,9,9,8,0,0,62,62,
  12,12,12,12,204,252,120,7,9,9,8,0,0,198,206,220,
  248,240,248,220,206,198,7,9,9,8,0,0,192,192,192,192,
  192,192,192,254,254,7,9,9,8,0,0,130,198,238,254,254,
  214,198,198,198,7,9,9,8,0,0,134,198,230,246,254,222,
  206,198,194,7,9,9,8,0,0,124,254,198,198,198,198,198,
  254,124,7,9,9,8,0,0,252,254,198,198,254,252,192,192,
  192,7,9,9,8,0,0,124,254,198,198,198,222,204,254,118,
  7,9,9,8,0,0,252,254,198,198,254,252,220,206,198,7,
  9,9,8,0,0,124,254,198,240,124,30,198,254,124,6,9,
  9,7,0,0,252,252,48,48,48,48,48,48,48,7,9,9,
  8,0,0,198,198,198,198,198,198,198,254,124,7,9,9,8,
  0,0,198,198,198,198,198,238,124,56,16,7,9,9,8,0,
  0,198,198,198,198,198,214,254,254,108,7,9,9,8,0,0,
  198,198,238,124,56,124,238,198,198,6,9,9,7,0,0,204,
  204,204,252,120,48,48,48,48,7,9,9,8,0,0,254,254,
  14,28,56,112,224,254,254};

const u8g_fntpgm_uint8_t Superstar19[398] U8G_FONT_SECTION("Superstar19") = {
  0,33,32,253,248,14,0,0,0,0,45,57,0,14,0,14,
  0,9,3,6,11,0,5,255,128,255,128,255,128,3,3,3,
  5,0,0,224,224,224,14,14,28,16,0,0,0,28,0,124,
  0,124,0,248,0,248,3,224,7,128,7,128,31,0,60,0,
  60,0,248,0,224,0,224,0,11,14,28,13,0,0,63,128,
  255,224,255,224,227,224,227,224,231,224,255,224,255,224,252,224,
  248,224,248,224,255,224,63,128,63,128,5,14,14,6,0,0,
  56,248,248,248,248,56,56,56,56,56,56,56,56,56,11,14,
  28,13,0,0,63,128,255,224,255,224,224,224,224,224,7,224,
  63,128,63,128,252,0,224,0,224,0,255,224,255,224,255,224,
  11,14,28,13,0,0,63,128,255,224,255,224,224,224,224,224,
  7,224,7,128,7,128,0,224,224,224,224,224,255,224,63,128,
  63,128,11,14,28,13,0,0,3,128,7,128,7,128,31,128,
  31,128,63,128,251,128,251,128,227,128,255,224,255,224,255,224,
  3,128,3,128,11,14,28,13,0,0,255,224,255,224,255,224,
  224,0,224,0,255,128,255,224,255,224,0,224,224,224,224,224,
  255,224,63,128,63,128,11,14,28,13,0,0,63,128,255,128,
  255,128,224,0,224,0,255,128,255,224,255,224,224,224,224,224,
  224,224,255,224,63,128,63,128,11,14,28,13,0,0,255,224,
  255,224,255,224,0,224,0,224,3,224,7,128,7,128,7,0,
  31,0,31,0,28,0,28,0,28,0,11,14,28,13,0,0,
  63,128,255,224,255,224,224,224,224,224,255,224,63,128,63,128,
  224,224,224,224,224,224,255,224,63,128,63,128,11,14,28,13,
  0,0,63,128,255,224,255,224,224,224,224,224,224,224,255,224,
  255,224,63,224,0,224,0,224,63,224,63,128,63,128};


void setup() {

    Serial.begin(9600);

    rtc.begin();

    /*
    if (rtc.lostPower()) {
        //Serial.println("RTC lost power, let's set the time!");
        // When time needs to be set on a new device, or after a power loss, the
        // following line sets the RTC to the date & time this sketch was compiled
        rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
        // This line sets the RTC with an explicit date & time, for example to set
        // January 21, 2014 at 3am you would call:
        // rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));
    }
    */

    rtc.disable32K();


    if ( u8g.getMode() == U8G_MODE_R3G3B2 ) {
        u8g.setColorIndex(255);     // white
    }
    else if ( u8g.getMode() == U8G_MODE_GRAY2BIT ) {
        u8g.setColorIndex(3);         // max intensity
    }
    else if ( u8g.getMode() == U8G_MODE_BW ) {
        u8g.setColorIndex(1);         // pixel on
    }
    else if ( u8g.getMode() == U8G_MODE_HICOLOR ) {
        u8g.setHiColorByRGB(255,255,255);
    }

    u8g.setFontPosBottom();

}


void loop() {

    DateTime now = rtc.now();

    char currentTime[] = "hh:mm";
    char currentDate[] = "YYYY.MM.DD";
    char currentSecond[] = "ss";

    now.toString(currentTime);
    now.toString(currentDate);
    now.toString(currentSecond);

    Serial.print(now.year(), DEC);
    Serial.print('/');
    Serial.print(now.month(), DEC);
    Serial.print('/');
    Serial.print(now.day(), DEC);
    Serial.print(" (");
    Serial.print(daysOfTheWeek[now.dayOfTheWeek()]);
    Serial.print(") ");
    Serial.print(now.hour(), DEC);
    Serial.print(':');
    Serial.print(now.minute(), DEC);
    Serial.print(':');
    Serial.print(now.second(), DEC);
    Serial.println();

    Serial.print("currentTime : "); Serial.print(currentTime); Serial.print("/");
    Serial.print("currentDate : "); Serial.print(currentDate); Serial.print("/");
    Serial.print("currentSecond : "); Serial.println(currentSecond);
    


    // picture loop
    u8g.firstPage();  
    do {
        //u8g.setFont(M42_6);
        //u8g.setFont(M42_12);
        //u8g.setFont(Superstar19);
        u8g.setFont(Superstar12);
        u8g.drawStr( 30, 20, currentDate);
        u8g.setFont(M42_12);
        u8g.drawStr( 11, 48, currentTime);
        u8g.setFont(M42_6);
        u8g.drawStr( 96, 48, currentSecond);
    } while( u8g.nextPage() );
  
    // rebuild the picture after some delay
    delay(50);

}
